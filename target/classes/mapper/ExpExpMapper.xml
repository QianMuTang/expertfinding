<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.njust.dao.baseDao.ExpExpMapper" >
  <resultMap id="BaseResultMap" type="com.njust.bean.baseBean.ExpExp" >
    <constructor >
      <idArg column="exp_exp_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="expert1_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="expert2_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="exp_relate" jdbcType="DOUBLE" javaType="java.lang.Double" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    exp_exp_id, expert1_id, expert2_id, exp_relate
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from exp_exp
    where exp_exp_id = #{expExpId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from exp_exp
    where exp_exp_id = #{expExpId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.njust.bean.baseBean.ExpExp" >
    insert into exp_exp (exp_exp_id, expert1_id, expert2_id, 
      exp_relate)
    values (#{expExpId,jdbcType=INTEGER}, #{expert1Id,jdbcType=INTEGER}, #{expert2Id,jdbcType=INTEGER}, 
      #{expRelate,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.njust.bean.baseBean.ExpExp" >
    insert into exp_exp
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="expExpId != null" >
        exp_exp_id,
      </if>
      <if test="expert1Id != null" >
        expert1_id,
      </if>
      <if test="expert2Id != null" >
        expert2_id,
      </if>
      <if test="expRelate != null" >
        exp_relate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="expExpId != null" >
        #{expExpId,jdbcType=INTEGER},
      </if>
      <if test="expert1Id != null" >
        #{expert1Id,jdbcType=INTEGER},
      </if>
      <if test="expert2Id != null" >
        #{expert2Id,jdbcType=INTEGER},
      </if>
      <if test="expRelate != null" >
        #{expRelate,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.njust.bean.baseBean.ExpExp" >
    update exp_exp
    <set >
      <if test="expert1Id != null" >
        expert1_id = #{expert1Id,jdbcType=INTEGER},
      </if>
      <if test="expert2Id != null" >
        expert2_id = #{expert2Id,jdbcType=INTEGER},
      </if>
      <if test="expRelate != null" >
        exp_relate = #{expRelate,jdbcType=DOUBLE},
      </if>
    </set>
    where exp_exp_id = #{expExpId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.njust.bean.baseBean.ExpExp" >
    update exp_exp
    set expert1_id = #{expert1Id,jdbcType=INTEGER},
      expert2_id = #{expert2Id,jdbcType=INTEGER},
      exp_relate = #{expRelate,jdbcType=DOUBLE}
    where exp_exp_id = #{expExpId,jdbcType=INTEGER}
  </update>
</mapper>